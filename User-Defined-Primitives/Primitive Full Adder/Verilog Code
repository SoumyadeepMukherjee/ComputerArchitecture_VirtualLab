//Code your design here
primitive cout_prim (cout, cin, a, b);
	input a, b, cin;
    output cout;
    table
    // a b cin : cout 
       0 0 0   :  0;
       1 0 0   :  0;
       0 1 0   :  0;
       0 0 1   :  0;
       1 1 0   :  1;
       1 0 1   :  1;
       0 1 1   :  1; 
       1 1 1   :  1;
    endtable
endprimitive

primitive sum_prim (sum, cin, a, b);
	input a, b, cin;
    output sum;
    table
    // a b cin : sum 
       0 0 0   :  0;
       1 0 0   :  1;
       0 1 0   :  1;
       0 0 1   :  1;
       1 1 0   :  0;
       1 0 1   :  0;
       0 1 1   :  0; 
       1 1 1   :  1;
    endtable
endprimitive


module test;
	reg a;
	reg b;
    reg cin;
	wire sum;
    wire cout;
	//Instantiate design under test
	full_test DUT1 ( .cout(cout), .sum(sum), .cin(cin), .a(a), .b(b) );
	initial begin
	//Dump waves
	$dumpfile("dump.vcd");
	$dumpvars(1);
        a = 1'b0;
        b = 1'b0;
        cin= 1'b0;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
        #15
        a = 1'b1;
        b = 1'b0;
        cin= 1'b0;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
        #15
        a = 1'b0;
        b = 1'b1;
        cin= 1'b0;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
        #15
        a = 1'b0;
        b = 1'b0;
        cin= 1'b1;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
        #15
        a = 1'b1;
        b = 1'b0;
        cin= 1'b1;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
        #15
        a = 1'b0;
        b = 1'b1;
        cin= 1'b1;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
        #15
        a = 1'b1;
        b = 1'b1;
        cin= 1'b0;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
        #15
        a = 1'b1;
        b = 1'b1;
        cin= 1'b1;
        $display("a:%h, b:%h, cin:%h, sum:%h, cout:%h", a, b, cin, sum, cout);
    end
endmodule
